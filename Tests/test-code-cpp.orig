/**
 * Documentation
 */
template<class T>
class A<T> {
    /// Comment A
    virtual Iterator<T> A() const override {
        return Iterator(this->data() + this->size() - 1, 1);
    }
    /// Comment B
    template<typename U = T>
    virtual Iterator<T> B() const override {
        return this->data() - 1;
    }
};

/**
 * Documentation
 */
class B: A<int> {
    /// Comment A
    virtual Iterator<T> A() const override {
        return Iterator(this->data() + this->size() - 1, 1);
    }
    /// Comment B
    template<typename U = T>
    virtual Iterator<T> B() const override {
        return this->data() - 1;
    }
};

/**
 * Documentation
 */
template<class T>
class C: A<T> {
    /// Comment A
    virtual Iterator<T> A() const override {
        return Iterator(this->data() + this->size() - 1, 1);
    }
    /// Comment B
    template<typename U = T>
    virtual Iterator<T> B() const override {
        return this->data() - 1;
    }
};
